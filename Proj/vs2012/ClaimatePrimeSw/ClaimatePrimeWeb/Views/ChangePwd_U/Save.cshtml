@{
    Layout = "~/Views/Shared/MasterPages/Home.cshtml";
}

@using ClaimatePrimeControllers.SecuredFolder.StaticClasses;
@using ClaimatePrimeControllers.SecuredFolder.Extensions;
@using ClaimatePrimeControllers.SecuredFolder.SessionClasses;
@using ClaimatePrimeModels.SecuredFolder.Extensions;
@using ClaimatePrimeConstants;

@model ClaimatePrimeModels.Models.ChangePasswordSaveModel


<div class="dv-page-header1">
    <ul class="ul-header">
        <li><a href="@Url.RouteUrl(ClaimatePrimeControllers.SecuredFolder.StaticClasses.StaticClass.RouteValues("Home"))" title="@Resources.ClaimatePrimeWebResx.Back" class="back-button" onclick="javascript:showDivPageLoading();"></a></li>
        <li>@Resources.ClaimatePrimeWebResx.ChangePassword</li>
    </ul>
</div>
@using (Html.ArivaForm("ChangePwd", "Save"))
{
    <div class="dv-block">
        <table class="table-entry">
            <tr>
                <td class="td-note" colspan="4">@Resources.ClaimatePrimeWebResx.Note : 
                        <ol>
                            <li>@Html.Raw(Resources.ClaimatePrimeWebResx.PassComplexityWarning.Replace("[X]", Model.GetConfigPassword().UpperCaseMinCount.ToString()).Replace("[Y]", Model.GetConfigPassword().NumberMinCount.ToString()).Replace("[Z]", Model.GetConfigPassword().SplCharCount.ToString()).Replace("[W]", Model.GetConfigPassword().MinLength.ToString()).Replace("[V]", Model.GetConfigPassword().MaxLength.ToString()))</li>
                            <li><span>@Resources.ClaimatePrimeWebResx.SplChars</span>@Model.GetSplChars()</li>
                        </ol>
                </td>
            </tr>

            <tr>
                <td>@Resources.ClaimatePrimeWebResx.CurrntPass <span class="star">*</span>
                </td>
                <td>
                    @Html.PasswordFor(m => m.CurrPwd
                                , StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "25") }
                                        , { new KeyValueModel<string, string>("onFocus", "javascript:return registerBlurFn();") } 
                                        , { new KeyValueModel<string, string>("onblur", "javascript:return blurTrimPwd(this);") } 
                                    }))
                </td>

            </tr>
            <tr>
                <td style="width: 20%">@Resources.ClaimatePrimeWebResx.Newpwd <span class="star">*</span>
                </td>
                <td style="width: 30%">
                    @Html.PasswordFor(m => m.NewPwd
                                , StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "25") }
                                        , { new KeyValueModel<string, string>("onFocus", "javascript:return registerBlurFn();") } 
                                        , { new KeyValueModel<string, string>("onblur", "javascript:return blurTrimPwd(this);") }                                   
                                    }))
                </td>
                <td style="width: 20%">@Resources.ClaimatePrimeWebResx.ConfirmNewPass <span class="star">*</span>
                </td>
                <td style="width: 30%">

                    @Html.PasswordFor(m => m.ConfPwd
                                , StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "25") }
                                        , { new KeyValueModel<string, string>("onFocus", "javascript:return registerBlurFn();") } 
                                        , { new KeyValueModel<string, string>("onblur", "javascript:return blurTrimPwd(this);") } 
                                    }))
                </td>
            </tr>
        </table>
        <div class="dv-submit-controls">
            <ul>
                <li>
                    <input type="submit" name="btnSave" id="btnSave" value="@Resources.ClaimatePrimeWebResx.Save" class="button-save" onclick="javascript: return validateSave();"></li>
                <li><a href="@Url.RouteUrl(ClaimatePrimeControllers.SecuredFolder.StaticClasses.StaticClass.RouteValues("Home"))" onclick="javascript:showDivPageLoading();" class="aButton-cancel">@Resources.ClaimatePrimeWebResx.Cancel</a></li>
            </ul>
        </div>
    </div>
}
<div style="display: none;">
    @*Error Or Success Message Displaying*@
    @if ((ViewBag.ErrMsg > 0) || (ViewBag.SuccMsg > 0))
    {
        if (ViewBag.ErrMsg > 0)
        {
            if (ViewBag.ErrMsg == 1)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrInvalidCase" />
            }
            else if (ViewBag.ErrMsg == 2)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.PassMatch" />
            }
            else if (ViewBag.ErrMsg == 3)
            {
        <input type="text" name="txtErrMsg"  value="@Resources.ClaimatePrimeWebResx.PassNoMatch" />
            }
            else if (ViewBag.ErrMsg == 4)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.CurrInvPass" />
            }
            else if (ViewBag.ErrMsg == 5)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.MinLength.Replace("[X]", Model.PasswordResult.MinLength.ToString())" />
            }
            else if (ViewBag.ErrMsg == 6)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.MaxLength.Replace("[X]", Model.PasswordResult.MaxLength.ToString())" />
            }
            else if (ViewBag.ErrMsg == 7)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrUpperCase.Replace("[X]", Model.PasswordResult.UpperCaseMinCount.ToString())" />
            }
            else if (ViewBag.ErrMsg == 8)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrNumberCase.Replace("[X]", Model.PasswordResult.NumberMinCount.ToString())" />
            }
            else if (ViewBag.ErrMsg == 9)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrSplChar.Replace("[X]", Model.PasswordResult.SplCharCount.ToString())" />
            }
            else if (ViewBag.ErrMsg == 10)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrNumberCase" />
            }
             else if (ViewBag.ErrMsg == 11)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.SamePwdAsCurrnt" />
            }

            else if (ViewBag.ErrMsg == 12)
            {
        <input type="text" name="txtErrMsg" value="@Resources.ClaimatePrimeWebResx.ErrHistory.Replace("[X]", Model.PasswordResult.HistoryReuseStatus.ToString())" />
            }
            else
            {
        <input type="text" name="txtSuccMsg"  value="@Resources.ClaimatePrimeWebResx.SaveErrorSucc" />
            }
        }
        else
        {
            if (ViewBag.SuccMsg == 1)
            {
        <input type="text" name="txtSuccMsg"  value="@Resources.ClaimatePrimeWebResx.SaveErrorSucc" />
            }
            else
            {
        <input type="text" name="txtSuccMsg"  value="@Resources.ClaimatePrimeWebResx.SaveErrorSucc" />
            }
        }
    }
</div>
