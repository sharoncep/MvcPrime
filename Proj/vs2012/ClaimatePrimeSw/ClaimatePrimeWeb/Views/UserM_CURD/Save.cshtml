@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/MasterPages/Home.cshtml";
}

@using ClaimatePrimeControllers.SecuredFolder.Extensions;

@using ClaimatePrimeModels.SecuredFolder.Commons;

@using ClaimatePrimeControllers.SecuredFolder.StaticClasses;
@using ClaimatePrimeControllers.SecuredFolder.SessionClasses;
@using ClaimatePrimeModels.SecuredFolder.Extensions;
@using ClaimatePrimeConstants;
@using ClaimatePrimeEFWork.EFContexts;

@model ClaimatePrimeModels.Models.UserSaveModel

@using (Html.ArivaForm("UserM", "Save"))
{
    @Html.TextBoxFor(m => m.AntiForgTokn
                                , StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("style", "display:none;") } 
                                    }))
    <div class="dv-page-header1">
        <ul class="ul-header">
            <li><a href="@Url.RouteUrl(StaticClass.RouteValues("UserM"))"  title="@Resources.ClaimatePrimeWebResx.Back" class="back-button" onclick="javascript:showDivPageLoading();"></a></li>
            <li>@Resources.ClaimatePrimeWebResx.Agent</li>
            @if (ArivaSession.Sessions().IsNewRec)
            {
                <li>-<span>@Resources.ClaimatePrimeWebResx.New</span></li>
            }
            else
            {
                <li>-<span>@Resources.ClaimatePrimeWebResx.Edit</span></li>
            }

        </ul>
    </div>
    @Html.Partial("UserControls/PageHeaderSub")
    <div class="dv-block">
        <table class="table-entry">
            <tr>
                <td colspan="4" class="td-heading">&nbsp;
                </td>
            </tr>
            <tr>
                <td style="width:20%">Username <span class="star">*</span>
                </td>
                <td style="width:30%">
                    @Html.TextBoxFor(m => m.User.UserName,
                StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "15") }
                                         , { new KeyValueModel<string, string>("onfocus", "javascript:return registerBlurFn();") }, { new KeyValueModel<string, string>("onblur", "javascript:return blurTrim(this);") }    
                                    }))
                </td>
                <td style="width:20%">Email <span class="star">*</span>
                </td>
                <td style="width:30%">
                    @Html.TextBoxFor(m => m.User.Email
                                , StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("placeholder", @Resources.ClaimatePrimeWebResx.DEFAULT_EMAIL) } 
                                       ,  { new KeyValueModel<string, string>("maxlength", "256") }
                                       , { new KeyValueModel<string, string>("onfocus", "javascript:return registerBlurFn();") }
                                        , { new KeyValueModel<string, string>("onblur", "javascript:return blurValidateEmail(this);") }
                                                                               
                                    }))
                </td>
            </tr>
            
            <tr>
                <td>Last Name <span class="star">*</span>
                </td>
                <td>
                    @Html.TextBoxFor(m => m.User.LastName,
                StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "150") }
                                         , { new KeyValueModel<string, string>("onfocus", "javascript:return registerBlurFn();") }, { new KeyValueModel<string, string>("onblur", "javascript:return blurTrim(this);") }    
                                    }))
                </td>
                <td>First Name <span class="star">*</span>
                </td>
                <td>
                    @Html.TextBoxFor(m => m.User.FirstName,
                StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "150") }
                                         , { new KeyValueModel<string, string>("onfocus", "javascript:return registerBlurFn();") }, { new KeyValueModel<string, string>("onblur", "javascript:return blurTrim(this);") }    
                                    }))
                </td>
            </tr>
            <tr>
                <td>Middle Name
                </td>
                <td>
                    @Html.TextBoxFor(m => m.User.MiddleName,
                StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "50") }
                                         , { new KeyValueModel<string, string>("onfocus", "javascript:return registerBlurFn();") }, { new KeyValueModel<string, string>("onblur", "javascript:return blurTrim(this);") }    
                                    }))
                </td>
                <td>Phone Number <span class="star">*</span></td>
                <td>
                   @Html.TextBoxFor(m => m.User.PhoneNumber  , 
                    StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("placeholder", @Resources.ClaimatePrimeWebResx.DEFAULT_PHONE) } 
                                        , { new KeyValueModel<string, string>("maxlength", "13") }
                                        , { new KeyValueModel<string, string>("onkeyup", "javascript:return keyUpUIntNumericLen(this, '10')") }
                                        , { new KeyValueModel<string, string>("onblur", "javascript: blurValidatePhone(this);") }                                       
                                    }))
                </td>
            </tr>
            <tr>
                <td>Manager Name
                </td>
                <td>

                   @Model.User_Manager
                    @Html.TextBoxFor(m => m.User.ManagerID
                                    , StaticClass.HtmlAttributes(
                                        new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("style", "display:none;") }                                       
                                        }))
                </td>
            </tr>
            <tr>
                <td>@Resources.ClaimatePrimeWebResx.Photo
                </td>
                <td>
                    <span class="label_hint">
                        @Resources.ClaimatePrimeWebResx.UploadSize.Replace("[X]", Convert.ToString(StaticClass.ConfigurationGeneral.mUploadMaxSizeInMBID))
                    </span>
                    <div class="FileUpload">
                        <input type="file" id="filUpload" name="filUpload" class="BrowserHidden" accept="@StaticClass.CsResources("PhotoAccept")" onchange="javascript:fileBrowseChange(this);" />
                        <div id="BrowserHidden" class="BrowserVisible">
                            <input type="text" id="txtfilUpload" class="FileField" style="width: 180px" readonly="true" onclick="javascript: fileBrowseClick(this);" />
                        </div>
                    </div>
                </td>
                <td class="td-image">
                    <ul class="ul_imgEnlarge">
                        <li class="imgPhoto">
                            <img src="@Url.RouteUrl(StaticClass.RouteValues("UserM", "ShowPhoto"))" alt="" style="width: 60px; height: 60px;" onclick="javascript:return enlargePhoto(this);" title="@Resources.ClaimatePrimeWebResx.EnlargeClick" />
                        </li>
                    </ul>
                </td>
            </tr>

            <tr @Html.Raw((ArivaSession.Sessions().IsNewRec) ? "style=display:none;" : "")>
                <td>@Resources.ClaimatePrimeWebResx.Active
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.User.IsActive)
                </td>
                <td>@Resources.ClaimatePrimeWebResx.Comments
                </td>
                <td>
                    @Html.TextAreaFor(m => m.User.Comment,
                StaticClass.HtmlAttributes(
                                    new List<KeyValueModel<string, string>> { 
                                        { new KeyValueModel<string, string>("maxlength", "4000") }    
                                    }))
                </td>
            </tr>
        </table>
        <div class="dv-submit-controls">
           <input type="submit" name="btnSave" id="btnSave" value="@Resources.ClaimatePrimeWebResx.Save" class="button-save" onclick="javascript: return validateSave();">
            <a href="@Url.RouteUrl(StaticClass.RouteValues("UserM"))" class="aButton-cancel" onclick="javascript:showDivPageLoading();">@Resources.ClaimatePrimeWebResx.Cancel</a>
        </div>

          <div id="divEnlargePhoto" class="div_transparent">
        <div class="dvImage">
            <img id="imgEnlargePhoto" src="@Url.RouteUrl(StaticClass.RouteValues("UserM", "ShowPhoto"))" alt="#" style="cursor:pointer" onclick="return printImage();" title="@Resources.ClaimatePrimeWebResx.PrintClick" />
        </div>
        <div class="dvControls_pop">
            <a href="#" onclick="javascript:return resizePhoto();" class="close-button">@Resources.ClaimatePrimeWebResx.Close</a>
        </div>
    </div>
    </div>
}
<div style="display: none;">
    @*Error Or Success Message Displaying*@
    @if ((ViewBag.ErrMsg > 0) || (ViewBag.SuccMsg > 0))
    {
        if (ViewBag.ErrMsg > 0)
        {
            if (ViewBag.ErrMsg == 1)
            {
        <input type="text" name="txtErrMsg"  value="@Resources.ClaimatePrimeWebResx.SaveError.Replace("[X]", Model.ErrorMsg)" />
            }
             else if (ViewBag.ErrMsg == 2)
            {
        <input type="text" name="txtErrMsg"  value="@Resources.ClaimatePrimeWebResx.UploadSize.Replace("[X]", StaticClass.ConfigurationGeneral.mUploadMaxSizeInMB.ToString())" />
            }
            else
            {
        <input type="text" name="txtErrMsg"  value="@Resources.ClaimatePrimeWebResx.SaveErrorSucc" />
            }
        }
        else
        {
            if (ViewBag.SuccMsg == 1)
            {
        <input type="text" name="txtErrMsg" value="sai" />
            }
            else
            {
        <input type="text" name="txtSuccMsg"  value="@Resources.ClaimatePrimeWebResx.SaveErrorSucc" />
            }
        }
    }
</div>
